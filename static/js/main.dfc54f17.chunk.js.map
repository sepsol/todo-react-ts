{"version":3,"sources":["contexts/TodoContext.tsx","components/SearchAppBar.tsx","components/CheckboxList.tsx","components/BottomAppBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","id","title","isDone","todoReducer","state","action","type","length","payload","filter","todo","TodoContext","createContext","TodoContextProvider","children","useReducer","dispatch","Provider","value","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","display","textAlign","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","maxWidth","background","paper","margin","CheckboxList","useContext","todos","React","useState","checked","setChecked","List","map","labelId","ListItem","key","role","undefined","dense","button","onClick","currentIndex","indexOf","newChecked","push","splice","ListItemIcon","Checkbox","tabIndex","disableRipple","ListItemText","primary","ListItemSecondaryAction","appBar","top","bottom","grow","newTodoForm","textField","addIcon","BottomAppBar","setTitle","handleSubmit","e","preventDefault","onSubmit","TextField","fullWidth","InputLabelProps","shrink","onChange","target","size","fontSize","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dfc54f17.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\n\r\ninterface TodoType {\r\n  id: number;\r\n  title: string;\r\n  isDone: boolean;\r\n}\r\n\r\ntype TodosStateType = any;\r\n// type TodosStateType = TodoType[];\r\n\r\ninterface TodosActionType {\r\n  type: 'CREATE_TODO' | 'DELETE_TODO';\r\n  payload: {\r\n    id: number;\r\n    title: string;\r\n    isDone: boolean;\r\n  };\r\n}\r\n\r\nconst initialState: TodosStateType = [{ id: 0, title: 'title', isDone: false }];\r\n\r\nfunction todoReducer(state: TodosStateType, action: TodosActionType) {\r\n  switch (action.type) {\r\n    case 'CREATE_TODO':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: state.length,\r\n          title: action.payload.title,\r\n          isDone: action.payload.isDone\r\n        }\r\n      ];\r\n    case 'DELETE_TODO':\r\n      // console.log(action.payload.id);\r\n      return [\r\n        ...state.filter((todo: TodoType) => todo.id !== action.payload.id)\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const TodoContext = createContext<TodosStateType>(initialState);\r\n\r\nfunction TodoContextProvider({ children }: any) {\r\n  const [state, dispatch] = useReducer(todoReducer, initialState);\r\n\r\n  return (\r\n    <TodoContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n\r\nexport default TodoContextProvider;\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport {\r\n  createStyles,\r\n  fade,\r\n  Theme,\r\n  makeStyles\r\n} from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      textAlign: 'center',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block'\r\n      }\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25)\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto'\r\n      }\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit'\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '12ch',\r\n        '&:focus': {\r\n          width: '20ch'\r\n        }\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nfunction SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Todo App\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchAppBar;\r\n","import React, { useContext } from 'react';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommentIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 720,\r\n      backgroundColor: theme.palette.background.paper,\r\n      margin: '25px auto'\r\n    }\r\n  })\r\n);\r\n\r\nfunction CheckboxList() {\r\n  const classes = useStyles();\r\n\r\n  const { state: todos, dispatch } = useContext(TodoContext);\r\n  const [checked, setChecked] = React.useState([0]);\r\n\r\n  const handleToggle = (id: number) => () => {\r\n    const currentIndex = checked.indexOf(id);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(id);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  // console.log(array);\r\n  return (\r\n    <List className={classes.root}>\r\n      {todos.map((todo: any) => {\r\n        const labelId = `checkbox-list-label-${todo.id}`;\r\n\r\n        return (\r\n          <ListItem\r\n            key={todo.id}\r\n            role={undefined}\r\n            dense\r\n            button\r\n            onClick={handleToggle(todo.id)}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(todo.id) !== -1}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={todo.title} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"comments\"\r\n                onClick={() =>\r\n                  dispatch({\r\n                    type: 'DELETE_TODO',\r\n                    payload: { id: todo.id }\r\n                  })\r\n                }\r\n              >\r\n                <CommentIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default CheckboxList;\r\n","import React, { useContext, useState } from 'react';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      top: 'auto',\r\n      bottom: 0,\r\n      backgroundColor: '#f5f5f5'\r\n    },\r\n    grow: {\r\n      flexGrow: 1\r\n    },\r\n    newTodoForm: {\r\n      width: '100%',\r\n      maxWidth: 720,\r\n      margin: '5px auto 20px',\r\n      display: 'flex',\r\n      alignItems: 'flex-end'\r\n    },\r\n    textField: {},\r\n    addIcon: {\r\n      marginLeft: 10\r\n    }\r\n  })\r\n);\r\n\r\nfunction BottomAppBar() {\r\n  const classes = useStyles();\r\n  const { dispatch } = useContext(TodoContext);\r\n  const [title, setTitle] = useState('');\r\n\r\n  function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: 'CREATE_TODO',\r\n      payload: { title, isDone: false }\r\n    });\r\n    setTitle('');\r\n  }\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <form className={classes.newTodoForm} onSubmit={handleSubmit}>\r\n          <TextField\r\n            id=\"standard-full-width\"\r\n            className={classes.textField}\r\n            placeholder=\"Add a new todo...\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n          />\r\n          <IconButton\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.addIcon}\r\n            onClick={handleSubmit}\r\n          >\r\n            <AddIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </form>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default BottomAppBar;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport TodoContextProvider from './contexts/TodoContext';\r\nimport SearchAppBar from './components/SearchAppBar';\r\nimport CheckboxList from './components/CheckboxList';\r\nimport BottomAppBar from './components/BottomAppBar';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TodoContextProvider>\r\n        <SearchAppBar />\r\n        <CheckboxList />\r\n        <BottomAppBar />\r\n      </TodoContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}